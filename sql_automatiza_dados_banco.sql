--#######################################

-- CRIAR TABELA TEMPORARIA 
CREATE TABLE TMP_MUDANCA_DADOS_KAPA
(COD_VENDA VARCHAR(10),
PARCELA VARCHAR(5),
NOSSO_NUMERO VARCHAR(20),
COD_BARRAS VARCHAR(70))
--OBS :NESSE MOMENTO COMO A TABELA É TEMPORÁRIA NÃO ME PREOCUPEI COM OS TIPOS CORRETOS 

--#######################################

-- INSERT DE TITULOS NA TABELA TEMPORARIA MANUALMENTE HABILITANDO O FOR UPDATE, POSTERIORMENTE DEVERÁ SER AUTOMATIZADO
SELECT * FROM TMP_MUDANCA_DADOS_KAPA2  --FOR UPDATE 

--#######################################

INSERT INTO TMP_MUDANCA_DADOS_KAPA (COD_VENDA, PARCELA, NOSSO_NUMERO, COD_BARRAS) 
SELECT 
       CASE
         WHEN LENGTH(TMP.COD_VENDA) = 10 THEN LTRIM(SUBSTR(TMP.COD_VENDA,1,8),0)
         WHEN LENGTH(TMP.COD_VENDA) < 10 THEN TMP.COD_VENDA
       ELSE '0' END VENDA,
       CASE
         WHEN LENGTH(TMP.COD_VENDA) = 10 THEN SUBSTR(TMP.COD_VENDA,-1)
         WHEN LENGTH(TMP.COD_VENDA) < 10 THEN '0'
       ELSE '00' END PARCELA,
       TMP.NOSSO_NUMERO,
       TMP.COD_BARRAS 
       
FROM TMP_MUDANCA_DADOS_KAPA2 TMP ; 

-- #####################################

-- VINCULAÇÃO DE TABELA TEMPORARIA COM TABELA DO SISTEMA A FIM DE TRAZER OS 6.635 TITULOS DO BANCO
SELECT PR.PRC_VEN_CODIGO_VENDA,
       PR.PRC_NUM_PARCELA,
       PR.PRC_VALOR,
       PR.PRC_NUMERO_BLOQUETE,
       PR.PRC_NUM_CODI_BARRAS,
       PR.PRC_CCP_NUMERO_COBR_PAG

FROM INF_PARCELAS_RECEBER PR

WHERE PR.PRC_VEN_CODIGO_VENDA IN (SELECT K.COD_VENDA FROM TMP_MUDANCA_DADOS_KAPA K WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA) 

--####################################

-- UPDATE DA TABELA MANUALMENTE
UPDATE INF_PARCELAS_RECEBER PR
    SET
        PR.PRC_NUMERO_BLOQUETE = (SELECT K.NOSSO_NUMERO
                                  FROM TMP_MUDANCA_DADOS_KAPA K
                                  WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA
                                    AND K.PARCELA = PR.PRC_NUM_PARCELA),
        PR.PRC_NUM_CODI_BARRAS = (SELECT K.COD_BARRAS
                                  FROM TMP_MUDANCA_DADOS_KAPA K
                                  WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA
                                    AND K.PARCELA = PR.PRC_NUM_PARCELA)
    WHERE
        PR.PRC_VEN_CODIGO_VENDA IN (SELECT K.COD_VENDA
                                    FROM TMP_MUDANCA_DADOS_KAPA K
                                    WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA
                                      AND K.PARCELA = PR.PRC_NUM_PARCELA)
        AND PR.PRC_NUM_PARCELA = (SELECT K.PARCELA
                                  FROM TMP_MUDANCA_DADOS_KAPA K
                                  WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA
                                    AND K.PARCELA = PR.PRC_NUM_PARCELA
                                    AND K.PARCELA != '0')
        AND PR.PRC_CCP_NUMERO_COBR_PAG = '84'; -- SOMENTE TITULOS COM CONVÊNIO KAPA

COMMIT; --FINALIZANDO COM O COMMIT PARA QUE AS ALTERAÇÕES SEJAM SALVAS NO BANCO DE DADOS 

--#######################################

-- CRIAÇÃO DE TABELA TEMPORÁRIA QUE SERVIRÁ COMO LOG DE UPDATE DE TÍTULOS PARA CONSULTA POSTERIOR
 CREATE TABLE TMP_LOG_TITULOS_KAPA
 ( 
  COD_TITULO VARCHAR(15),
  PARCELA VARCHAR(5),
  NOSSO_NUMERO VARCHAR(30),
  CODIGO_BARRAS VARCHAR(70),
  DATA_INSERCAO DATE ,
  STATUS VARCHAR(25)
 ) --OBS :NESSE MOMENTO COMO A TABELA É TEMPORÁRIA NÃO ME PREOCUPEI COM OS TIPOS CORRETOS 


--###################################

-- INSERT DOS DADOS NA TABELA TEMPORARIA
   INSERT INTO TMP_LOG_TITULOS_BANCO (COD_TITULO, PARCELA, NOSSO_NUMERO, CODIGO_BARRAS, DATA_INSERCAO )
    SELECT 
        K.COD_VENDA AS COD_TITULO,
        K.PARCELA,
        K.NOSSO_NUMERO,
        K.COD_BARRAS,
        SYSDATE --DATA ATUAL
    FROM 
        TMP_MUDANCA_DADOS_KAPA K
    --WHERE K.COD_VENDA NOT IN (SELECT L.COD_TITULO FROM TMP_LOG_TITULOS_BANCO L); -- INSERIR DESDE QUE JÁ NÃO ESTEJA NA TABELA NO LOG, PARA NÃO DUPLICAR OS TÍTULOS A CADA EXECUÇÃO   
    COMMIT; 
    
--#####################################

-- LIMPARA OS DADOS DA TABELA
--DELETE TMP_MUDANCA_DADOS_KAPA; -- OU SEJA, APÓS O UPDATE SER REALIZADO OS DADOS DA TABELA SERÃO LIMPOS PARA QUE A TABELA FIQUE PRONTA PARA A INSERÇÃO DE NOVOS DADOS

--######################################

-- SELECT PARA VERIFICAR SE OS TÍTULOS ENTRARAM NA TABELA
SELECT * FROM TMP_LOG_TITULOS_KAPA ORDER BY 5 DESC 

--#####################################

-- TABELA CRIADA PARA ARMAENAR OS DADOS DE BACKUP ANTES DO UPDATE 
CREATE TABLE TMP_BACKUP_ALTERA_KAPA
(
COD_VENDA VARCHAR(30),
PARCELA VARCHAR(05),
NOSSO_NUMERO VARCHAR(25),
COD_BARRAS VARCHAR(70),
DATA_BKP DATE
)

-- SELECT * FROM TMP_BACKUP_ALTERA_KAPA
--#####################################

 -- INICIO DA PROCEDURE
 
CREATE OR REPLACE PROCEDURE ATUALIZARTITULOSKAPA IS 
  BEGIN
  -- MIGRANDO ITENS DA TABELA TEMPORÁRIA TMP_MUDANCA_DADOS_KAPA2 PARA A TABELA TMP_MUDANCA_DADOS_KAPA QUE AO INSERIR FAZ A SEPARAÇÃO DA VENDA E PARCELA
   INSERT INTO TMP_MUDANCA_DADOS_KAPA (COD_VENDA, PARCELA, NOSSO_NUMERO, COD_BARRAS) 
      SELECT 
       CASE
         WHEN LENGTH(TMP.COD_VENDA) = 10 THEN LTRIM(SUBSTR(TMP.COD_VENDA,1,8),0)
         WHEN LENGTH(TMP.COD_VENDA) < 10 THEN TMP.COD_VENDA
      ELSE '0' END VENDA,
      CASE
         WHEN LENGTH(TMP.COD_VENDA) = 10 THEN SUBSTR(TMP.COD_VENDA,-1)
         WHEN LENGTH(TMP.COD_VENDA) < 10 THEN '0'
      ELSE '00' END PARCELA,
      TMP.NOSSO_NUMERO,
      TMP.COD_BARRAS 
       
   FROM TMP_MUDANCA_DADOS_KAPA2 TMP;  
   COMMIT; -- CONFIRMA A TRANSAÇÃO 
   
   --INSERT CRIADA PARA ARMAENAR OS DADOS DE BACKUP ANTES DO UPDATE 
   INSERT INTO TMP_BACKUP_ALTERA_KAPA (COD_VENDA, PARCELA, NOSSO_NUMERO, COD_BARRAS, DATA_BKP)
    SELECT PR.PRC_VEN_CODIGO_VENDA,
       PR.PRC_NUM_PARCELA,
       PR.PRC_NUMERO_BLOQUETE,
       PR.PRC_NUM_CODI_BARRAS,
       SYSDATE 

    FROM INF_PARCELAS_RECEBER PR

    WHERE PR.PRC_VEN_CODIGO_VENDA IN (SELECT K.COD_VENDA FROM TMP_MUDANCA_DADOS_KAPA K WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA)
      AND PR.PRC_CCP_NUMERO_COBR_PAG = '84'; --BKP SOMENTE TITULOS KAPA
    COMMIT; -- CONFIRMA A TRANSAÇÃO 

    -- ATUALIZA OS CAMPOS NOSSO_NUMERO E NUM_CODI_BARRAS NA TABELA INF_PARCELAS_RECEBER 
    UPDATE INF_PARCELAS_RECEBER PR
    SET 
        PR.PRC_NUMERO_BLOQUETE = (SELECT K.NOSSO_NUMERO 
                                  FROM TMP_MUDANCA_DADOS_KAPA K 
                                  WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA 
                                    AND K.PARCELA = PR.PRC_NUM_PARCELA ),
        PR.PRC_NUM_CODI_BARRAS = (SELECT K.COD_BARRAS 
                                  FROM TMP_MUDANCA_DADOS_KAPA K 
                                  WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA
                                    AND K.PARCELA = PR.PRC_NUM_PARCELA)
    WHERE 
        PR.PRC_VEN_CODIGO_VENDA IN (SELECT K.COD_VENDA 
                                    FROM TMP_MUDANCA_DADOS_KAPA K 
                                    WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA
                                      AND K.PARCELA = PR.PRC_NUM_PARCELA)
        AND PR.PRC_NUM_PARCELA = (SELECT K.PARCELA 
                                  FROM TMP_MUDANCA_DADOS_KAPA K 
                                  WHERE K.COD_VENDA = PR.PRC_VEN_CODIGO_VENDA
                                    AND K.PARCELA = PR.PRC_NUM_PARCELA
                                    AND K.PARCELA != '0') -- NÃO INSERIR PARCELAS DIFERENTES DE ZERO
        AND PR.PRC_CCP_NUMERO_COBR_PAG = '84';
    COMMIT; -- CONFIRMA A TRANSAÇÃO 
    
--###################################### 

    --- INSERT NA TABELA COMO LOG 
     INSERT INTO TMP_LOG_TITULOS_KAPA (COD_TITULO, PARCELA, NOSSO_NUMERO, CODIGO_BARRAS, DATA_INSERCAO, STATUS)
     SELECT 
        K.COD_VENDA AS COD_TITULO,
        K.PARCELA,
        K.NOSSO_NUMERO,
        K.COD_BARRAS,
        SYSDATE ,
        CASE WHEN K.COD_VENDA = (SELECT PR.PRC_VEN_CODIGO_VENDA FROM INF_PARCELAS_RECEBER PR WHERE PR.PRC_VEN_CODIGO_VENDA = K.COD_VENDA AND PR.PRC_CCP_NUMERO_COBR_PAG = '84') THEN 'DADOS ATUALIZADO'
        ELSE 'NÃO ATUALIZADOS' END STATUS
            
    FROM 
        TMP_MUDANCA_DADOS_KAPA K;
   -- WHERE K.COD_VENDA NOT IN (SELECT L.COD_TITULO FROM TMP_LOG_TITULOS_KAPA L); -- INSERIR DESDE QUE JÁ NÃO ESTEJA NA TABELA NO LOG, PARA NÃO DUPLICAR OS TÍTULOS A CADA EXECUÇÃO   
    COMMIT; 
    
   DELETE TMP_MUDANCA_DADOS_KAPA;
   COMMIT;
   
   DELETE TMP_MUDANCA_DADOS_KAPA2;
   COMMIT;
    
END ATUALIZARTITULOSKAPA; 
--FIM DA PROCEDURE 

--#######################################

-- EXECUTAR A PROCEDURE
BEGIN 
ATUALIZARTITULOSKAPA; 
END; 
--FIM DA EXECUÇÃO  

--#######################################
